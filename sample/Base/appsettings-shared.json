{
  "base.env.enable_real_time_console": true,
  "base.env.enable_home_page": true,
  "base.env.default_redis_connection_string": "$(Redis.Ip):$(Redis.Port),password=$(Redis.Password),defaultDatabase=1",
  "base.env.cache.storage_type": "redis",
  "base.env.cache.max_random_seconds": 5,
  "base.env.onion_package": {
    "PackageSetting": {
      "AutoScan": true,
      "ReloadDelay": 1,
      "Packages": []
    },
    "ExtendAssemblyPaths": [
      "Extends",
      "PackageExtends"
    ],
    "UseLocalApiPackage": false
  },
  "base.env.audit_log": {
    "Enable": true,
    "MaxRetainedDays": 1,
    "StorageConnectionString": "Server=$(Database.Ip);PORT=$(Database.Port);USER ID=postgres;PASSWORD=$(Database.Password);DATABASE=mom_audit_log;Pooling=true"
  },
  "base.env.rabbitmq_config": {
    "MqServiceType": "local",
    "HostName": "$(RabbitMq.IP)",
    "UserName": "$(RabbitMq.UserName)",
    "Password": "$(RabbitMq.Password)",
    "VirtualHost": "$(RabbitMq.VHost)",
    "Port": "$(RabbitMq.Port)",
    "HandlerLockConnectString": "",
    "HandlerLockTimeoutSeconds": 15
  },
  "base.env.uid_bus_config": {
    "Generator": {
      "WorkerIdRegistrarType": 1
    },
    "Buffer": {
      "MaxIdBufferSize": 1000000,
      "InitialIdBufferSize": 100000,
      "ReplenishIdBufferSize": 60000
    }
  },
  "base.env.aws": {
    "serverType": "1",
    "endpoint": "$(ObjectStorage.Oss.EndPoint)",
    "forcePathStyle": true,
    "region": "$(ObjectStorage.Oss.Region)",
    "accessKey": "$(ObjectStorage.Oss.Ak)",
    "secretKey": "$(ObjectStorage.Oss.Sk)",
    "useSignedUrl": false,
    "preSignedUrlExpiresSeconds": 3600
  },
  "base.env.meta.core": {
    "StorageConnectionString": "Server=$(Database.Ip);PORT=$(Database.Port);USER ID=postgres;PASSWORD=$(Database.Password);DATABASE=mom_meta_dev;Pooling=true",
    "FileStorageRootPath": "",
    "PackageLevels": [
      "Infrastructure",
      "Standard",
      "Industry",
      "Consumer",
      "Cache"
    ]
  },
  "base.env.default_db_encryption_enable": false,
  "base.env.default_db_encryption_key": "",
  "base.env.extra_db_connection": [],
  "base.env.job.hangfire": {
    "StorageType": "redis",
    "HangfireRedis": {
      "ConnectionString": "$(Redis.Ip):$(Redis.Port),password=$(Redis.Password),defaultDatabase=12"
    },
    "HangfireServer": {
      "Enable": true
    },
    "HangfireDashboard": {
      "Enable": true,
      "DashboardLoginPwd": "9bdc59cfe4b46f08d182c0fc440c86e8",
      "DashboardLoginName": "momAdmin"
    }
  },
  "base.env.scheduler": {
    "KeepLogDays": 7,
    "Enable": false
  },
  "base.env.report": {
    "DesignerBaseUrl": "/AR-API",
    "ViewerBaseUrl": "/AR-API/reporting"
  },
  "base.env.business_process": {
    "StepType": {
      "Start": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.StartStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "If": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.IfStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "DataRead": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.DataRead, DigiHua.sMOMDev.Provider.BusinessProcess",
      "DataWrite": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.DataWrite, DigiHua.sMOMDev.Provider.BusinessProcess",
      "Loop": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.LoopStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "LoopBreak": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.LoopBreak, DigiHua.sMOMDev.Provider.BusinessProcess",
      "Print": "DigiHua.sMOMDev.Provider.ActiveReports.Integration.BusinessProcess.PrintStep, DigiHua.sMOMDev.Provider.ActiveReports",
      "Alert": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.AlertStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "Log": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.LogStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "End": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.EndStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "JumpFlow": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.BPStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "VariableCreate": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.VariableCreateStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "VariableModify": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.VariableModifyStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "BPCall": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.BPCallStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "Merge": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.Merge, DigiHua.sMOMDev.Provider.BusinessProcess",
      "NumberGet": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.NumberGetStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "ApiCall": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.ApiCallStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "Switch": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.SwitchStep, DigiHua.sMOMDev.Provider.BusinessProcess",
      "ESB": "DigiHua.sMOMDev.Provider.BusinessProcess.Implements.Steps.ESBStep, DigiHua.sMOMDev.Provider.BusinessProcess"
    },
    "Config": {
      "cacheLife": 10
    }
  },
  "base.env.expressions": {
    "FunctionSdkName": "FormulaFunction",
    "FunctionTypes": [
      "DigiHua.sMOMDev.Provider.Expressions.Extends.ExpressionFunctions, DigiHua.sMOMDev.Provider.Expressions"
    ]
  },
  "base.env.open_telemetry": {
    "Enabled": false,
    "Trace": {
      "MongoDB": {
        "Enabled": false
      }
    },
    "Export": {
      "Console": {
        "Enabled": false
      },
      "Otlp": {
        "Endpoint": "http://127.0.0.1:14327"
      },
      "Prometheus": {
        "Enabled": true
      }
    }
  },
  "ReverseProxy": {
    "Routes": {
      "sMES_Test_Backend": {
        "ClusterId": "sMES_Cluster",
        "Match": {
          "Path": "/sMES_Test_Backend/{*remainder}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/sMES_Test_Backend"
          }
        ]
      },
      "NJ": {
        "ClusterId": "sMES_Cluster",
        "Match": {
          "Path": "/NJ/{*remainder}"
        },
        "Transforms": [
          {
            "PathRemovePrefix": "/NJ"
          }
        ]
      }
    },
    "Clusters": {
      "sMES_Cluster": {
        "Destinations": {
          "sMES_Cluster/destination1": {
            "Address": "http://127.0.0.1:20191"
          }
        }
      }
    }
  }
}